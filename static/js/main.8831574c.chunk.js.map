{"version":3,"sources":["Reducers/BoardReducer.js","Contexts/BoardContext.js","Components/Square.js","Components/Board.js","Components/Game.js","index.js"],"names":["BoardReducer","prevState","action","payload","type","newSquares","squares","slice","square","isTurnX","history","currentHistory","move","setSquares","wonConditions","i","length","a","b","c","Audio","play","endGame","winner","condition","moves","checkEndGame","Array","fill","timeTravel","BoardContext","React","createContext","Square","props","boardContext","useContext","dispatch","className","value","includes","parseInt","onClick","Board","useReducer","state","Provider","map","board","key","Game","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8831574c.chunk.js","sourcesContent":["\r\nexport default function BoardReducer(prevState , action) {\r\n    const {payload} = action;\r\n    switch (action.type) {\r\n        case 'setSquares':\r\n            return setSquares(prevState , payload);\r\n        case 'checkEndGame':\r\n            return checkEndGame(prevState , payload);\r\n        case 'timeTravel':\r\n            return timeTravel(prevState , payload);\r\n        default:\r\n            return prevState;\r\n    }\r\n}\r\n\r\n// set squares function\r\nfunction setSquares(prevState,payload) {\r\n    let newSquares = prevState.squares.slice();\r\n    newSquares[payload.square] = prevState.isTurnX ? 'X' : 'O';\r\n    let history = prevState.currentHistory !== null ? prevState.currentHistory : prevState.history;\r\n    return {\r\n      ...prevState,\r\n        squares: newSquares,\r\n        isTurnX: ! prevState.isTurnX ,\r\n        history: [...history,newSquares],\r\n        currentHistory: null,\r\n        move: prevState.move + 1\r\n    };\r\n}\r\n// select won player function\r\nfunction checkEndGame(prevState,payload) {\r\n    const {squares} = prevState;\r\n    let wonConditions = [\r\n        [0,1,2],[3,4,5],[6,7,8],\r\n        [0,3,6],[1,4,7],[2,5,8],\r\n        [0,4,8],[2,4,6]\r\n    ];\r\n    for(let i=0 ; i<wonConditions.length;i++) {\r\n        const [a,b,c] = wonConditions[i];\r\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            new Audio('./sound/game-over.mp3').play();\r\n            return {\r\n                ...prevState,\r\n                endGame: true,\r\n                winner: squares[a],\r\n                condition: wonConditions[i]\r\n            };\r\n        }\r\n    }\r\n    if(payload.moves === 8) {\r\n        new Audio('./sound/game-over-tie.mp3').play();\r\n        return {\r\n            ...prevState,\r\n            endGame: true,\r\n            winner: 'draw',\r\n        };\r\n    }\r\n\r\n    if(prevState.isTurnX) {\r\n        new Audio('sound/note-low.mp3').play();\r\n    } else{\r\n        new Audio('sound/note-high.mp3').play();\r\n    }\r\n\r\n    return prevState;\r\n}\r\n// set squares function\r\nfunction timeTravel(prevState,payload) {\r\n    const { move } = payload;\r\n    const square = prevState.history[move-1] ? prevState.history[move-1] : Array(9).fill(null);\r\n    return {\r\n        ...prevState,\r\n        endGame: false,\r\n        squares: square,\r\n        condition: [],\r\n        isTurnX: !(move%2),\r\n        move:move,\r\n        currentHistory: prevState.history.slice(0,move)\r\n    };\r\n}","import React from 'react';\r\n\r\nconst BoardContext = React.createContext({\r\n\r\n});\r\n\r\nexport default BoardContext;","import React , { useContext } from 'react';\r\nimport BoardContext from \"../Contexts/BoardContext\";\r\n\r\nexport default function Square(props) {\r\n\r\n    const boardContext = useContext(BoardContext);\r\n    const { dispatch , squares , endGame , condition , move } = boardContext;\r\n\r\n    const clickHandler = () => {\r\n        if(squares[props.value] === null && !endGame) {\r\n            dispatch({type:'setSquares' , payload:{square: props.value}});\r\n            dispatch({type: 'checkEndGame' , payload:{moves: move}});\r\n        }\r\n    }\r\n\r\n    return(\r\n        <button\r\n            className={`btn\r\n            ${squares[props.value] ? 'square' : ''}\r\n            ${condition.includes(parseInt(props.value)) ? 'won' : 'lose'}`}\r\n            onClick={clickHandler}\r\n        >\r\n            {squares[props.value]}\r\n        </button>\r\n    );\r\n}","import React , { useReducer } from 'react';\r\nimport \"../Styles/style.css\";\r\n// Import Reducers\r\nimport BoardReducer from \"../Reducers/BoardReducer\";\r\n// Import Contexts\r\nimport BoardContext from \"../Contexts/BoardContext\";\r\n// Import Components\r\nimport Square from \"./Square\";\r\nexport default function Board() {\r\n\r\n    const [state , dispatch] = useReducer(BoardReducer,{\r\n        isTurnX: true,\r\n        squares: Array(9).fill(null),\r\n        endGame: false,\r\n        winner: null,\r\n        history: [],\r\n        currentHistory: [],\r\n        condition:[],\r\n        move: 0\r\n    });\r\n\r\n\r\n\r\n    return(\r\n        <BoardContext.Provider value={{\r\n            isTurnX: state.isTurnX,\r\n            squares: state.squares,\r\n            endGame: state.endGame,\r\n            history: state.history,\r\n            move: state.move,\r\n            condition: state.condition,\r\n            dispatch\r\n        }}>\r\n            <div className=\"container\">\r\n                <div className=\"board_outer\">\r\n\r\n                    <div className={`board ${state.condition.length ? 'end' : ''}`}>\r\n                        <Square value=\"0\" />\r\n                        <Square value=\"1\" />\r\n                        <Square value=\"2\" />\r\n                        <Square value=\"3\" />\r\n                        <Square value=\"4\" />\r\n                        <Square value=\"5\" />\r\n                        <Square value=\"6\" />\r\n                        <Square value=\"7\" />\r\n                        <Square value=\"8\" />\r\n                    </div>\r\n                    <div className=\"status_indicator\">\r\n                        {\r\n                            state.endGame\r\n                            ? state.winner === 'draw'\r\n                                ? <span>The Game is Draw</span>\r\n                                : <span>Winner is: {state.winner}</span>\r\n                            : <span>Current Turn is: {state.isTurnX ? 'X' : 'O'}</span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"moves_history\">\r\n                    {\r\n                        state.history.length\r\n                            ? <button\r\n                            onClick={() => dispatch({type: 'timeTravel' , payload: {move: 0}})}>\r\n                                Go to game start\r\n                            </button>\r\n                            : null\r\n                    }\r\n                    {state.history.map((board , key) => {\r\n                        if(key < state.history.length -1) {\r\n                        return <button key={key}\r\n                   onClick={() => dispatch({type: 'timeTravel' , payload: {move: key+1}})}\r\n                        >Go to move #{key+1}</button>\r\n                        }\r\n                        return null;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </BoardContext.Provider>\r\n    );\r\n}","import React from 'react';\r\nimport Board from \"./Board\";\r\n\r\nclass Game extends React.Component{\r\n\r\n    render() {\r\n        return(\r\n            <Board />\r\n            );\r\n    }\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from \"./Components/Game\";\n\nReactDOM.render(<Game /> , document.getElementById('root')\n);\n\n"],"sourceRoot":""}